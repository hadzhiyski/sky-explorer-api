// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SkyExplorer.Common.Models;
using SkyExplorer.Data;

#nullable disable

namespace SkyExplorer.Data.Migrations
{
    [DbContext(typeof(SkyExplorerDbContext))]
    [Migration("20220304105437_AddCountriesAndAirports")]
    partial class AddCountriesAndAirports
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "airport_type", new[] { "heliport", "small_airport", "medium_airport", "large_airport", "seaplane_base", "balloonport", "closed" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SkyExplorer.Data.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryAlpha2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("HomeUrl")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)");

                    b.Property<string>("Iata")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Icao")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<AirportType>("Type")
                        .HasColumnType("airport_type");

                    b.Property<string>("WikiUrl")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)");

                    b.HasKey("Id");

                    b.HasIndex("CountryAlpha2");

                    b.HasIndex("Icao", "Iata");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("SkyExplorer.Data.Models.Country", b =>
                {
                    b.Property<string>("Alpha2")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<BoundingBox>("BoundingBox")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Alpha2");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("SkyExplorer.Data.Models.Airport", b =>
                {
                    b.HasOne("SkyExplorer.Data.Models.Country", "Country")
                        .WithMany("Airports")
                        .HasForeignKey("CountryAlpha2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SkyExplorer.Data.Models.Country", b =>
                {
                    b.Navigation("Airports");
                });
#pragma warning restore 612, 618
        }
    }
}
